type Foo u8;

type Animal interface {
	pub fn say_hi(this, Foo x, u16 y);
	fn bar() -> i16;
};

type Test struct {
	i16 x;
};

type Dog struct {
	Test foo;
	f32 x;
};

apply Animal to Dog {
	pub fn say_hi(this, Foo x, u16 y) {}

	fn bar() -> i16 {
		return 0;
	}
}

apply Dog {
	fn test() {

	}
}

fn main() {
	Foo foo = 0;
	Dog d = Dog {
		foo: Test {
			x: 0,
		},
		x: 1.0,
	};
}
