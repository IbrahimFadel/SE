type Vec struct<T>
	where T is Clone
{
	len u64,
	capacity u64,
	buf *T,
}

trait Clone {}

apply Clone to u8 {
}

apply<T> to Vec<T>
	where T is Clone
{
	fn new() -> Vec<T> => {
		Vec {
			len: 0,
			capacity: 0,
			buf: @flux.intrinsics.malloc(32),
		}
	}
}

// TODO: collect applications first, then lower the bodies (how do we know clone)