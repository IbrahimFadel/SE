struct Vector<T> {
	buf T*,
	len u64,
	cap u64,
}

apply<T> to Vector<T> {
	fn new() -> This {
		Vector {
			buf: @flux.intrinsics.malloc(128) as T*,
			len: 0,
			cap: 128
		}
	}

	fn push(this This, v T) {
		let buf = if this.len == this.cap {
			this.cap = this.cap * 2;

			let new_buf = @flux.intrinsics.malloc(this.cap) as T*;
			@flux.intrinsics.memcpy(new_buf, this.buf);
			@flux.intrinsics.free(this.buf);

			new_buf
		} else {
			this.buf
		};
		
		buf.idx(this.len) = v;
		this.len = this.len + 1;
		this.buf = buf;
	}
}
