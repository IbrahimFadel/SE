pkg std

u64 initialCapacity = 16;
u64 factor = 2;

type string struct {
	i8 *buf;
	u64 len;
	u64 capacity;
}

fn (string *s) init() {
	s->buf = malloc(initialCapacity);
	s->len = 0;
	s->capacity = initialCapacity;
}

fn (string *s) destroy() {
	if(s->buf != nil) {
		free(s->buf);
	}
}

fn (string *s) resize(u64 value) {
	i8 *output, buf = malloc(value), s->buf;
	u64 len = s->len;
	memcpy(output, buf, len);
	free(buf);
	s->buf = output;
	s->capacity = value;
}

fn (string *s) addChar(i8 value) {
	if(s->len == s->capacity) {
		s->resize(s->capacity * factor);
	}
	s->buf[s->len] = value;
	s->len = s->len + 1;
}

fn main() -> i32 {
	string *s = (string *) malloc(sizeof string);
	s->init();
	s->addChar(33);
	s->destroy();
	return (i32)s->capacity;
}
